{"version":3,"sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/webpack/bootstrap","webpack://webpackNumbers/external {\"commonjs\":\"jquery\",\"commonjs2\":\"jquery\",\"amd\":\"jquery\",\"root\":\"$\"}","webpack://webpackNumbers/external {\"commonjs\":[\"xterm\",\"Terminal\"],\"commonjs2\":[\"xterm\",\"Terminal\"],\"amd\":[\"xterm\",\"Terminal\"],\"root\":\"Terminal\"}","webpack://webpackNumbers/./src/js/terminalizer.js","webpack://webpackNumbers/./src/js/index.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","m","Terminalizer","element","options","self","$element","$","_terminal","_frames","_totalDuration","_currentTime","_timer","_lastTickTime","_isPlaying","_isStarted","_isRendering","_lastRenderedFrame","_startTemplate","_playerTemplate","_terminalTemplate","_options","extend","recordingFile","realTiming","speedFactor","beforeMiddleware","afterMiddleware","controls","repeat","autoplay","autofocus","thumbnailTime","_init","then","result","play","error","Error","prototype","_loadJSON","frames","records","config","frameBox","title","type","style","theme","background","padding","watermark","imagePath","Terminal","cols","rows","cursorStyle","fontFamily","fontSize","lineHeight","letterSpacing","allowTransparency","scrollback","html","find","replaceWith","addClass","text","css","open","Object","defineProperty","_core","get","focus","_initController","_initRenderedEmitter","_emit","_adjustDelays","_calculateTiming","_calculateTotalDuration","Date","now","setInterval","_tick","bind","_addWatermark","jump","_updatePlayer","on","event","length","width","position","offsetX","Math","floor","pause","_writeInProgress","forEach","frame","delay","frameDelay","maxIdleTime","currentTime","framesCount","index","duration","startTime","endTime","reduce","carry","_findFrameAt","time","fromIndex","i","_isFrameAt","frameIndex","watermarkConfig","watermarkImg","document","createElement","attr","prepend","Promise","resolve","reject","_renderFrame","skipMiddlewares","callback","tasks","push","call","write","content","one","setTimeout","_series","url","getJSON","done","fail","jqxhr","textStatus","tickDelay","progress","_formatTime","eventType","extraParameters","trigger","minutes","seconds","parseInt","runTask","getFramesCount","reset","removeClass","updatePlayer","isPlaying","fn","terminalizer","method","methodArgs","arguments","data","Array","slice","apply","c","d","name","getter","o","enumerable","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","n","object","property","hasOwnProperty","p","s","moduleId","l","modules"],"mappings":"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","file":"js/terminalizer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"xterm\")[\"Terminal\"]);\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"webpackNumbers\", [\"jquery\", [\"xterm\",\"Terminal\"]], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory(require(\"jquery\"), require(\"xterm\")[\"Terminal\"]);\n\telse\n\t\troot[\"webpackNumbers\"] = factory(root[\"$\"], root[\"Terminal\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","// Third-party Scripts\nimport * as xterm from 'xterm';\n\n/**\n * Terminalizer Web Player\n * https://terminalizer.com\n * \n * @author Mohammad Fares <faressoft.com@gmail.com>\n */\nexport function Terminalizer(element, options) {\n\n  var self = this;\n\n  /**\n   * A reference to the DOM element\n   * @type {Object}\n   */\n  self.element = element;\n\n  /**\n   * A reference to the jQuery element\n   * @type {Object}\n   */\n  self.$element = $(element);\n\n  /**\n   * The terminal instance\n   * @type {Object}\n   */\n  self._terminal = null;\n\n  /**\n   * The frames\n   * in the format [\n   *   {\n   *     content,\n   *     delay,\n   *     duration,\n   *     startTime,\n   *     endTime\n   *   },\n   *   ..\n   * ]\n   * @type {Array}\n   */\n  self._frames = null;\n\n  /**\n   * The summation of the adjusted frames delays\n   * @type {Array}\n   */\n  self._totalDuration = 0;\n\n  /**\n   * The current time of the player\n   * @type {Array}\n   */\n  self._currentTime = 0;\n\n  /**\n   * The playing timer\n   * @type {Object}\n   */\n  self._timer = null;\n\n  /**\n   * The time at the last timer tick in ms\n   * @type {Number}\n   */\n  self._lastTickTime = null;\n\n  /**\n   * Is playing\n   * @type {Boolean}\n   */\n  self._isPlaying = false;\n\n  /**\n   * Is the played at least once\n   * @type {Boolean}\n   */\n  self._isStarted = false;\n\n  /**\n   * Is blocked for the rendering via a timer's tick or jumping\n   * @type {Boolean}\n   */\n  self._isRendering = false;\n\n  /**\n   * The index of the last rendered frame\n   * @type {Number}\n   */\n  self._lastRenderedFrame = -1;\n\n  /**\n   * HTML template for the start SVG icon\n   * @type {String}\n   */\n  self._startTemplate = '<?xml version=\"1.0\" ?><svg id=\"Layer_1\"' +\n    ' style=\"enable-background:new 0 0 30 30;\" version=\"1.1\" viewBox=\"0 0 30 30\"' +\n    ' xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"' +\n    ' xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n    '<polygon points=\"6.583,3.186 5,4.004 5,15 26,15 26.483,14.128 \"/>' +\n    '<polygon points=\"6.583,26.814 5,25.996 5,15 26,15 26.483,15.872 \"/>' +\n    '<circle cx=\"26\" cy=\"15\" r=\"1\"/><circle cx=\"6\" cy=\"4\" r=\"1\"/>' +\n    '<circle cx=\"6\" cy=\"26\" r=\"1\"/></svg>';\n\n  /**\n   * HTML template for the player\n   * @type {String}\n   */\n  self._playerTemplate = '<div class=\"terminalizer-player\">' +\n    '<div class=\"cover\"></div>' +\n    '<div class=\"start\">' + self._startTemplate + '</div>' +\n    '<div class=\"terminalizer\"></div>' +\n    '<div class=\"controller\">' +\n    '<div class=\"play\"><span class=\"icon\"></span></div>' +\n    '<div class=\"pause\"><span class=\"icon\"></span></div>' +\n    '<div class=\"timer\">00:00</div>' +\n    '<div class=\"progressbar-wrapper\">' +\n    '<div class=\"progressbar\">' +\n    '<div class=\"progress\"></div>' +\n    '</div></div></div></div>';\n\n  /**\n   * HTML template for the terminal\n   * @type {String}\n   */\n  self._terminalTemplate = '<div class=\"terminalizer\">' +\n    '<div class=\"terminalizer-frame\">' +\n    '<div class=\"terminalizer-titlebar\">' +\n    '<div class=\"buttons\">' + \n    '<div class=\"close-button\"></div>' + \n    '<div class=\"minimize-button\"></div>' +\n    '<div class=\"maximize-button\"></div>' +\n    '</div><div class=\"title\"></div>' + \n    '</div>' +\n    '<div class=\"terminalizer-body\"></div>' +\n    '</div></div>';\n\n  /**\n   * Options\n   * @type {Object}\n   */\n  self._options = $.extend({\n    recordingFile: null,\n    realTiming: false,\n    speedFactor: 1.0,\n    beforeMiddleware: null,\n    afterMiddleware: null,\n    controls: true,\n    repeat: false,\n    autoplay: false,\n    autofocus: true,\n    thumbnailTime: 0\n  }, options);\n\n  // Initialize Terminalizer\n  self._init().then(function(result) {\n  \n    // Autoplay is enabled\n    if (self._options.autoplay) {\n      return self.play();\n    }\n\n  }).catch(function(error) {\n  \n    throw new Error(error);\n    \n  });\n\n  return self;\n\n}\n\n/**\n * Initialize Terminalizer\n *\n * @return {Promise}\n */\nTerminalizer.prototype._init = function() {\n\n  var self = this;\n  var element = self.element;\n  var $element = self.$element;\n\n  // Load the recording file\n  return self._loadJSON(self._options.recordingFile).then(function(result) {\n\n    // Store a reference to the frames\n    self._frames = result.frames || result.records;\n\n    // Marge the plugin's options with recording file's configs\n    self._options = $.extend(result.config, self._options);\n\n    // If the controls is enabled\n    if (self._options.controls) {\n\n      // Use null frame\n      self._options.frameBox.title = null;\n      self._options.frameBox.type = null;\n      self._options.frameBox.style = {};\n\n      // Set the background color\n      if (self._options.theme.background == 'transparent') {\n        self._options.frameBox.style.background = 'black';\n      } else {\n        self._options.frameBox.style.background = self._options.theme.background;\n      }\n\n      // Add paddings to the frame\n      self._options.frameBox.style.padding = '10px';\n\n      // Remove the watermark\n      self._options.watermark.imagePath = null;\n\n    }\n\n    // Create a terminal instance\n    self._terminal = new Terminal({\n      cols: self._options.cols,\n      rows: self._options.rows,\n      cursorStyle: self._options.cursorStyle,\n      fontFamily: self._options.fontFamily,\n      fontSize: self._options.fontSize,\n      lineHeight: self._options.lineHeight,\n      letterSpacing: self._options.letterSpacing,\n      allowTransparency: true,\n      scrollback: 0,\n      theme: self._options.theme\n    });\n\n    // Insert the player template\n    $element.html($(self._playerTemplate));\n\n    // Insert the terminal template\n    $element.find('.terminalizer').replaceWith(self._terminalTemplate);\n\n    if (self._options.frameBox.type) {\n      $element.find('.terminalizer-frame').addClass('terminalizer-' + self._options.frameBox.type);\n    }\n\n    if (self._options.frameBox.type && self._options.frameBox.title) {\n      $element.find('.terminalizer-frame .title').text(self._options.frameBox.title);\n    }\n\n    $element.find('.terminalizer-frame').css(self._options.frameBox.style);\n\n    // If the controls is enabled\n    if (self._options.controls) {\n      $element.find('.terminalizer-player').addClass('controls');\n    }\n\n    // If the frame not null, push the start button down\n    if (self._options.frameBox.type) {\n      $element.find('.terminalizer-player').addClass('framed');\n    }\n\n    // Use smaller start icon\n    if (self._options.rows < 10) {\n      $element.find('.terminalizer-player').addClass('small');\n    }\n\n    // Open the terminal\n    self._terminal.open($element.find('.terminalizer-body')[0]);\n\n    // A hack to keep the focus on the terminal\n    Object.defineProperty(self._terminal._core, 'isFocused', {\n      get: function() {\n        return true;\n      }\n    });\n\n    if (self._options.autofocus) {\n      self._terminal.focus();\n    }\n\n    // Initialize the controller\n    self._initController();\n\n    // A Wrapper around the refresh event of the Terminal\n    self._initRenderedEmitter();\n  \n    // Emit the event on the Terminalizer element\n    self._emit('init');\n\n    // Adjust the delays of the frames, considering to the options\n    self._adjustDelays();\n\n    // Calculate and set the duration, startTime, and endTime for each frame\n    self._calculateTiming();\n\n    // Sum the adjusted frames delays\n    self._totalDuration = self._calculateTotalDuration();\n\n    // Start the playing timer\n    self._lastTickTime = Date.now();\n    self._timer = setInterval(self._tick.bind(self), 1);\n\n    // Add a watermark\n    if (self._options.watermark.imagePath) {\n      return self._addWatermark(self._options.watermark);\n    }\n\n  }).then(function() {\n  \n    return self.jump(self._options.thumbnailTime, false);\n  \n  }).then(function() {\n  \n    // Set the current time to the time of the frame\n    self._currentTime = 0;\n\n    // Update the player (time and progressbar)\n    self._updatePlayer();\n  \n  });\n\n};\n\n/**\n * Initialize the controller\n *\n * - Attach event handlers\n */\nTerminalizer.prototype._initController = function() {\n\n  var self = this;\n\n  /**\n   * A callback function for the event:\n   * When the progressbar is clicked\n   * \n   * @param {Object} event\n   */\n  self.$element.find('.controller .progressbar').on('click', function(event) {\n\n    // Not started yet\n    if (!self._isStarted) {\n      return false;\n    }\n\n    var length = $(this).width();\n    var position = event.offsetX;\n\n    self.jump(Math.floor(self._totalDuration * position / length));\n\n    return false;\n\n  });\n  \n  /**\n   * A callback function for the event:\n   * When the start button is clicked\n   * \n   * @param {Object} event\n   */\n  self.$element.find('.cover, .start').on('click', function(event) {\n\n    self.play();\n    return false;\n\n  });\n  \n  /**\n   * A callback function for the event:\n   * When the play button is clicked\n   * \n   * @param {Object} event\n   */\n  self.$element.find('.controller .play').on('click', function(event) {\n\n    self.play();\n    return false;\n\n  });\n  \n  /**\n   * A callback function for the event:\n   * When the pause button is clicked\n   * \n   * @param {Object} event\n   */\n  self.$element.find('.controller .pause').on('click', function(event) {\n\n    self.pause();\n    return false;\n\n  });\n  \n};\n\n/**\n * Wrap the refresh event of the Terminal and emit a `rendered` event\n * on the Terminalizer element when all the write operations are executed\n */\nTerminalizer.prototype._initRenderedEmitter = function() {\n\n  var self = this;\n\n  self._terminal.on('refresh', function refreshHandler() {\n\n    // Not all write operations are executed yet\n    if (this._writeInProgress) {\n      return;\n    }\n\n    // Emit the event on the Terminalizer element\n    self._emit('rendered');\n\n  });\n  \n};\n\n/**\n * Adjust the delays of the frames, considering to the options\n *\n * - frameDelay\n *   - Delay between frames in ms\n *   - If the value is `auto` use the actual recording delays\n *   \n * - maxIdleTime\n *   - Maximum delay between frames in ms\n *   - Ignored if the `frameDelay` isn't set to `auto`\n *   - Set to `auto` to prevnt limiting the max idle time\n * \n * - speedFactor\n *   - Multiply the frames delays by this factor\n */\nTerminalizer.prototype._adjustDelays = function() {\n\n  var self = this;\n\n  // Foreach frame\n  self._frames.forEach(function(frame) {\n\n    var delay = frame.delay;\n\n    // Adjust the delay according to the options\n    if (self._options.frameDelay != 'auto') {\n\n      delay = self._options.frameDelay;\n\n    } else if (self._options.maxIdleTime != 'auto' && delay > self._options.maxIdleTime) {\n\n      delay = self._options.maxIdleTime;\n\n    }\n\n    // Apply speedFactor\n    delay = delay * self._options.speedFactor;\n\n    // Set the adjusted delay\n    frame.delay = delay;\n\n  });\n  \n};\n\n/**\n * Calculate and set the duration, startTime, and endTime for each frame\n */\nTerminalizer.prototype._calculateTiming = function() {\n\n  var currentTime = 0;\n  var framesCount = this._frames.length;\n  var frames = this._frames;\n\n  // Foreach frame\n  frames.forEach(function(frame, index) {\n\n    // Set the duration (the delay of the next frame)\n    // The % is used to take the delay of the first frame\n    // as the duration of the last frame\n    var duration = frames[(index + 1) % framesCount].delay;\n\n    // Set timing values for the current frame\n    frame.duration = duration;\n    frame.startTime = currentTime;\n    frame.endTime = currentTime + duration;\n\n    currentTime = currentTime + duration;\n    \n  });\n\n};\n\n/**\n * Sum the adjusted frames delays\n * \n * @return {Number}\n */\nTerminalizer.prototype._calculateTotalDuration = function() {\n\n  return this._frames.reduce(function(carry, frame) {\n\n    return carry + frame.delay;\n    \n  }, 0);\n  \n};\n\n/**\n * Get the frame's index at a specific time\n * \n * @param  {Number} time\n * @param  {Number} fromIndex (default: 0)\n * @return {Number}\n */\nTerminalizer.prototype._findFrameAt = function(time, fromIndex) {\n\n  var frame = null;\n\n  // Default value for fromIndex\n  if (typeof fromIndex == 'undefined') {\n    fromIndex = 0;\n  }\n\n  // Foreach frame\n  for (var i = fromIndex; i < this._frames.length; i++) {\n\n    frame = this._frames[i];\n\n    if (frame.startTime <= time && time < frame.endTime) {\n      return i;\n    }\n\n  }\n\n  // The endTime of the final frame belongs to it\n  if (frame.startTime <= time && time <= frame.endTime) {\n    return this._frames.length - 1;\n  }\n\n  return -1;\n  \n};\n\n/**\n * Check if the time belongs to the frame's duration\n * \n * @param  {Number} time\n * @param  {Number} frameIndex\n * @return {Number}\n */\nTerminalizer.prototype._isFrameAt = function(time, frameIndex) {\n\n  var frame = this._frames[frameIndex];\n\n  if (typeof frame == 'undefined') {\n    return false;\n  }\n\n  if (frame.startTime <= time && time < frame.endTime) {\n    return true;\n  }\n\n  return false;\n  \n};\n\n/**\n * Add a watermark and wait until it is fully loaded\n *\n * @param  {Object}  watermarkConfig {imagePath, style}\n * @return {Promise}\n */\nTerminalizer.prototype._addWatermark = function(watermarkConfig) {\n  \n  var watermarkImg = document.createElement('img');\n\n  $(watermarkImg).addClass('terminalizer-watermark');\n  $(watermarkImg).attr('src', watermarkConfig.imagePath);\n  $(watermarkImg).css(watermarkConfig.style);\n\n  this.$element.find('.terminalizer-frame').prepend(watermarkImg);\n\n  return new Promise(function(resolve, reject) {\n\n    $('.terminalizer-watermark').on('load', resolve);\n    \n  });\n\n};\n\n/**\n * Render a frame\n *\n * Flow:\n * - Wait for the _options.beforeMiddleware\n * - Render the frame and wait for the rendring\n * - Wait for the _options.afterMiddleware\n *\n * @param {Number}   frameIndex\n * @param {Boolean}  skipMiddlewares\n * @param {Function} callback\n */\nTerminalizer.prototype._renderFrame = function(frameIndex, skipMiddlewares, callback) {\n\n  var self = this;\n  var tasks = [];\n  var frame = self._frames[frameIndex];\n\n  // If beforeMiddleware is set\n  if (self._options.beforeMiddleware && !skipMiddlewares) {\n\n    tasks.push(function(callback) {\n      self._options.beforeMiddleware.call(self, frame, frameIndex, callback.bind(null, null, null));\n    });\n\n  }\n\n  // Rendering\n  tasks.push(function(callback) {\n\n    // Render the frame\n    self._terminal.write(frame.content);\n\n    /**\n     * A callback function for the event:\n     * When the write operation is executed and\n     * the changes are rendered\n     */\n    self.$element.one('rendered', function() {\n\n      // An extra tick to allow the browser to complete canvas painting\n      setTimeout(function() {\n        callback(); \n      });\n      \n    });\n\n  });\n\n  // If afterMiddleware is set\n  if (self._options.afterMiddleware && !skipMiddlewares) {\n\n    tasks.push(function(callback) {\n      self._options.afterMiddleware.call(self, frame, frameIndex, callback.bind(null, null, null));\n    });\n\n  }\n\n  self._series(tasks, function(error, result) {\n\n    callback();\n    \n  });\n\n};\n\n/**\n * Load, and parse JSON files\n * \n * @param  {String}  url\n * @return {Promise}\n */\nTerminalizer.prototype._loadJSON = function(url) {\n\n  return new Promise(function(resolve, reject) {\n\n    $.getJSON(url).done(resolve).fail(function(jqxhr, textStatus, error) {\n      reject('Failed to load ' + url);\n    });\n    \n  });\n\n};\n\n/**\n * The playing timer's callback\n */\nTerminalizer.prototype._tick = function() {\n\n  var self = this;\n  var tickDelay = 0;\n\n  tickDelay = Date.now() - self._lastTickTime;\n  self._lastTickTime = Date.now();\n\n  // Not playing\n  if (!self._isPlaying) {\n    return;\n  }\n\n  // Still rendering the last frame\n  if (self._isRendering) {\n    return;\n  }\n\n  if (self._currentTime < self._totalDuration) {\n    self._currentTime += tickDelay;\n    self._updatePlayer();\n  }\n\n  if (self._currentTime > self._totalDuration) {\n    self._currentTime = self._totalDuration;\n  }\n\n  // Already rendered\n  if (self._lastRenderedFrame != -1 && self._isFrameAt(self._currentTime, self._lastRenderedFrame)) {\n    return;\n  }\n\n  // Reached the end\n  if (self._lastRenderedFrame == self._frames.length - 1 &&\n      self._currentTime == self._totalDuration) {\n\n    // Emit the event on the Terminalizer element\n    self._emit('playingCompleted');\n\n    // Repeat is enabled\n    if (self._options.repeat) {\n      self._currentTime = 0;\n      return;\n    }\n\n    return self.pause();\n\n  }\n\n  // Check if current time belongs to the next frame's duration\n  if (self._isFrameAt(self._currentTime, self._lastRenderedFrame + 1)) {\n    self._lastRenderedFrame = self._lastRenderedFrame + 1;\n  } else {\n    self._lastRenderedFrame = self._findFrameAt(self._currentTime);\n  }\n\n  // The start point of the rendering cycle\n  self._isRendering = true;\n\n  // Render the frame\n  self._renderFrame(self._lastRenderedFrame, false, function() {\n\n    // To discard the time spent rendering\n    self._lastTickTime = Date.now();\n\n    // The end point of the rendering cycle\n    self._isRendering = false;\n\n  });\n\n};\n\n/**\n * Update the player (time and progressbar)\n */\nTerminalizer.prototype._updatePlayer = function() {\n\n  var progress = this._currentTime / this._totalDuration * 100;\n  var time = this._formatTime(this._currentTime);\n\n  this.$element.find('.terminalizer-player .progress').width(progress + '%');\n  this.$element.find('.terminalizer-player .timer').text(time);\n  \n};\n\n/**\n * Emit an event on the Terminalizer element\n * \n * @param {String} eventType\n * @param {Array}  extraParameters (Optional)\n */\nTerminalizer.prototype._emit = function(eventType, extraParameters) {\n\n  var self = this;\n\n  // Default value for extraParameters\n  if (typeof extraParameters == 'undefined') {\n    extraParameters = [];\n  }\n\n  setTimeout(function() {\n    self.$element.trigger(eventType, extraParameters);\n  });\n  \n};\n\n/**\n * Format time as MM:SS\n * \n * @param  {Number} time time in ms\n * @return {Number}\n */\nTerminalizer.prototype._formatTime = function(time) {\n\n  var minutes = Math.floor(time / 60000);\n  var seconds = parseInt((time - (minutes * 60000)) / 1000);\n\n  if (minutes < 10) {\n    minutes = '0' + minutes;\n  }\n  if (seconds < 10) {\n    seconds = '0' + seconds;\n  }\n\n  return minutes + ':' + seconds;\n  \n};\n\n/**\n * Execute a set of async tasks in sequence\n * \n * @param {Array}    tasks\n * @param {Function} callback\n */\nTerminalizer.prototype._series = function(tasks, callback) {\n\n  if (tasks.length == 0) {\n    return callback(null);\n  }\n\n  var runTask = function(index) {\n\n    tasks[index](function(error, result) {\n\n      if (typeof error != 'undefined' && error) {\n        return callback(error);\n      }\n\n      // All tasks have been executed\n      if (index == tasks.length - 1) {\n        return callback(null);\n      }\n\n      return runTask(index + 1);\n\n    });\n\n  };\n\n  runTask(0);\n\n};\n\n/**\n * Get the number of frames\n * \n * @return {Number}\n */\nTerminalizer.prototype.getFramesCount = function() {\n\n  return this._frames.length;\n  \n};\n\n/**\n * Start/resume playing the frames\n *\n * @return {Promise}\n */\nTerminalizer.prototype.play = function() {\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n\n    // Reached the end or not started yet\n    if ((self._lastRenderedFrame == self.getFramesCount() - 1 &&\n         self._currentTime == self._totalDuration) || !self._isStarted) {\n\n      self._currentTime = 0;\n\n      // Set the _isStarted flag\n      self._isStarted = true;\n\n      // Reset the terminal\n      self._terminal.reset();\n\n      /**\n       * A callback function for the event:\n       * When the write operation is executed and\n       * the changes are rendered\n       */\n      return self.$element.one('rendered', function() {\n        resolve();\n      });\n\n    }\n\n    resolve();\n\n  }).then(function() {\n\n    // Add started class\n    self.$element.find('.terminalizer-player').addClass('started');\n\n    // Set the _isPlaying flag\n    self._isPlaying = true;\n\n    // Emit the event on the Terminalizer element\n    self._emit('playingStarted');\n  \n    // Add playing class\n    self.$element.find('.terminalizer-player').addClass('playing');\n  \n  });\n\n};\n\n/**\n * Pause playing the frames\n */\nTerminalizer.prototype.pause = function() {\n\n  // Unset the _isPlaying flag\n  this._isPlaying = false;\n\n  // Remove playing class\n  this.$element.find('.terminalizer-player').removeClass('playing');\n\n  // Emit the event on the Terminalizer element\n  this._emit('playingPaused');\n  \n};\n\n/**\n * Change the current time of the player\n *\n * @param  {Number}  time\n * @param  {Boolean} updatePlayer if false, just render the frame\n *                                without setting `_currentTime` and\n *                                without calling `updatePlayer()`\n *                                (Optional) (Default: true)\n * @return {Promise}\n */\nTerminalizer.prototype.jump = function(time, updatePlayer) {\n\n  var self = this;\n  var tasks = [];\n\n  // The frame to jump to\n  var frameIndex = null;\n\n  // Is currently playing\n  var isPlaying = self._isPlaying;\n\n  // Default value for updatePlayer\n  if (typeof updatePlayer == 'undefined') {\n    updatePlayer = true;\n  }\n\n  // The start point of the rendering cycle\n  self._isRendering = true;\n  self._isPlaying = false;\n\n  if (updatePlayer) {\n\n    // Set the current time to the time of the frame\n    self._currentTime = time;\n\n    // Update the player (time and progressbar)\n    self._updatePlayer();\n    \n  }\n\n  return new Promise(function(resolve, reject) {\n\n    /**\n     * A callback function for the event:\n     * When the write operation is executed and\n     * the changes are rendered\n     */\n    self.$element.one('rendered', function() {\n\n      // Get the frame's index\n      frameIndex = self._findFrameAt(time);\n\n      // Foreach frame <= the frame to jump too\n      for (var i = 0; i <= frameIndex; i++) {\n        self._terminal.write(self._frames[i].content);\n      }\n\n      /**\n       * A callback function for the event:\n       * When the write operation is executed and\n       * the changes are rendered\n       */\n      self.$element.one('rendered', function() {\n\n        // The end point of the rendering cycle\n        self._isRendering = false;\n        self._isPlaying = isPlaying;\n\n        resolve();\n\n      });\n\n    });\n\n    // Reset the terminal\n    self._terminal.reset();\n\n  });\n  \n};\n","/*!\n * Terminalizer Web Player\n * https://terminalizer.com\n * \n * @author Mohammad Fares <faressoft.com@gmail.com>\n */\n\nimport $ from 'jquery';\nimport {Terminalizer} from './terminalizer.js';\n\n/**\n * Terminalizer jQuery Plugin\n * \n * - If the first argument is an object\n *   - A new Terminalizer instance will be attached to the element\n *   - The passed object will be used to override the defaults\n * - If the first argument is a string\n *   - The Terminalizer's method that matches the string will be called\n *   - Any extra arguments will be passed to the method \n *\n * Methods:\n * ------------\n * - getFramesCount\n * - play\n * - pause\n * - jump\n * \n * Events:\n * ------------\n * - init\n * - playingCompleted\n * - playingStarted\n * - playingPaused\n * - rendered\n */\n$.fn.terminalizer = function() {\n\n  var options = {};\n  var method = {};\n  var methodArgs = [];\n\n  if (arguments.length == 0) {\n    throw new Error('The options argument is required');\n  }\n\n  if (typeof arguments[0] == 'string') {\n\n    method = arguments[0];\n    methodArgs = Array.prototype.slice.call(arguments, 1);\n\n    if (typeof this.data('terminalizer') == 'undefined') {\n      throw new Error('It is not Terminalizer element');\n    }\n\n    return this.data('terminalizer')[method].apply(this.data('terminalizer'), methodArgs);\n\n  }\n\n  if (typeof this.data('terminalizer') != 'undefined') {\n    return this;\n  }\n\n  options = arguments[0];\n  this.data('terminalizer', new Terminalizer(this[0], options));\n\n  return this;\n  \n};\n"],"sourceRoot":""}